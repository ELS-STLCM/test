using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Web.Mvc;
using System.Web;
using SimChartMedicalOffice.ApplicationServices.ApplicationServiceInterface.Builder;
using SimChartMedicalOffice.Core;
using System.Web.Script.Serialization;
using System.Configuration;
using SimChartMedicalOffice.Common;
using System.IO;
using SimChartMedicalOffice.Core.ProxyObjects;
using SimChartMedicalOffice.Core.QuestionBanks;
using SimChartMedicalOffice.Common.Utility;


namespace SimChartMedicalOffice.Web.Controllers
{
    public class AuthoringController : BaseController
    {
        public ActionResult Practice()
        {
            return View("../Builder/Authoring/Practice");
        }
        public ActionResult PatientBuilder()
        {
            List<string> filterAge = new List<string>();
            filterAge.Add("Filter by Age");
            for (int ageCount = 1; ageCount <= 100; ageCount++)
            {
                filterAge.Add(ageCount.ToString());
            }
            ViewData["filterByAge"] = new SelectList(filterAge.ToList(), "filterByAge");
            return View("../Builder/Patient/PatientBuilder");
        }
        public ActionResult QuestionBankLanding()
        {
            List<string> filterByType = new List<string>(); 
            ViewBag.FilterByQuestionType = GetQuestionTypeFlexBoxList();
            return View("../Builder/Authoring/QuestionBankLanding");
        }

<<<<<<< Updated upstream
        public ActionResult AssignmentBuilder()
        {
            ViewData["NoOfAttempts"] = new SelectList(AppCommon.NoOfAttempts.ToList(), "NoOfAttempts");
            return View("../Builder/Assignment/AssignmentBuilder");
=======
        public ActionResult SkillSetLanding()
        {
            List<string> filterByType = new List<string>();
            ViewBag.FilterByQuestionType = GetQuestionTypeFlexBoxList();
            return View("../Builder/SkillSet/ConfigureQuestionsAnswersStep3");
>>>>>>> Stashed changes
        }
    }
}
